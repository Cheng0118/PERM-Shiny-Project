mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='YEAR', 'YR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='MONTH', 'MTH')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='BI-WEEKLY', 'BI')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='WEEK', 'WK')) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "YR", PW_AMOUNT_9089,
ifelse(PW_UNIT_OF_PAY_9089 == "WK", PW_AMOUNT_9089*52,
ifelse(PW_UNIT_OF_PAY_9089 == "BI", PW_AMOUNT_9089*52/2,
ifelse(PW_UNIT_OF_PAY_9089 == "MTH", PW_AMOUNT_9089*12,
ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, PW_AMOUNT_9089)))))) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "NULL" | is.na(PW_UNIT_OF_PAY_9089), NA, PW_AMOUNT_9089))
alldf = data %>% mutate(., CASE_STATUS = toupper(CASE_STATUS))
# Employer State
alldf = alldf %>%
mutate(., EMPLOYER_STATE = ifelse(EMPLOYER_STATE %in% state.abb, state.name[match(EMPLOYER_STATE, state.abb)], EMPLOYER_STATE)) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='BC', 'BRITISH COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DC', 'DISTRICT OF COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DISTRICT OF COLUMBIA', 'WASHINGTON')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='MP', 'NORTHERN MARIANA ISLANDS')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='GU', 'GUAM')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='PR', 'PUERTO RICO')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='VI', 'VIRGIN ISLANDS')) %>%
mutate(., EMPLOYER_STATE = toupper(EMPLOYER_STATE))
# Prevailing Wage
alldf = alldf %>%
mutate(., PW_UNIT_OF_PAY_9089 = toupper(PW_UNIT_OF_PAY_9089)) %>%
mutate(., PW_AMOUNT_9089 = as.numeric(gsub(",", "", alldf$PW_AMOUNT_9089))) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='HOUR', 'HR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='YEAR', 'YR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='MONTH', 'MTH')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='BI-WEEKLY', 'BI')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='WEEK', 'WK')) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "WK", PW_AMOUNT_9089*52,
ifelse(PW_UNIT_OF_PAY_9089 == "BI", PW_AMOUNT_9089*52/2,
ifelse(PW_UNIT_OF_PAY_9089 == "MTH", PW_AMOUNT_9089*12,
ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, PW_AMOUNT_9089))))) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "NULL" | is.na(PW_UNIT_OF_PAY_9089), NA, PW_AMOUNT_9089))
ifelse(alldf[28,16] == "HR", 1, 2)
alldf = data %>% mutate(., CASE_STATUS = toupper(CASE_STATUS))
# Employer State
alldf = alldf %>%
mutate(., EMPLOYER_STATE = ifelse(EMPLOYER_STATE %in% state.abb, state.name[match(EMPLOYER_STATE, state.abb)], EMPLOYER_STATE)) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='BC', 'BRITISH COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DC', 'DISTRICT OF COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DISTRICT OF COLUMBIA', 'WASHINGTON')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='MP', 'NORTHERN MARIANA ISLANDS')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='GU', 'GUAM')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='PR', 'PUERTO RICO')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='VI', 'VIRGIN ISLANDS')) %>%
mutate(., EMPLOYER_STATE = toupper(EMPLOYER_STATE))
# Prevailing Wage
alldf = alldf %>%
mutate(., PW_UNIT_OF_PAY_9089 = toupper(PW_UNIT_OF_PAY_9089)) %>%
mutate(., PW_AMOUNT_9089 = as.numeric(gsub(",", "", alldf$PW_AMOUNT_9089))) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='HOUR', 'HR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='YEAR', 'YR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='MONTH', 'MTH')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='BI-WEEKLY', 'BI')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='WEEK', 'WK')) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "WK", PW_AMOUNT_9089*52,
ifelse(PW_UNIT_OF_PAY_9089 == "BI", PW_AMOUNT_9089*52/2,
ifelse(PW_UNIT_OF_PAY_9089 == "MTH", PW_AMOUNT_9089*12,
ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, PW_AMOUNT_9089))))) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "NULL" | is.na(PW_UNIT_OF_PAY_9089), NA, PW_AMOUNT_9089))
View(alldf)
alldf = data %>% mutate(., CASE_STATUS = toupper(CASE_STATUS))
# Employer State
alldf = alldf %>%
mutate(., EMPLOYER_STATE = ifelse(EMPLOYER_STATE %in% state.abb, state.name[match(EMPLOYER_STATE, state.abb)], EMPLOYER_STATE)) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='BC', 'BRITISH COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DC', 'DISTRICT OF COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DISTRICT OF COLUMBIA', 'WASHINGTON')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='MP', 'NORTHERN MARIANA ISLANDS')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='GU', 'GUAM')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='PR', 'PUERTO RICO')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='VI', 'VIRGIN ISLANDS')) %>%
mutate(., EMPLOYER_STATE = toupper(EMPLOYER_STATE))
# Prevailing Wage
alldf = alldf %>%
mutate(., PW_UNIT_OF_PAY_9089 = toupper(PW_UNIT_OF_PAY_9089)) %>%
mutate(., PW_AMOUNT_9089 = as.numeric(gsub(",", "", alldf$PW_AMOUNT_9089))) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='HOUR', 'HR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='YEAR', 'YR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='MONTH', 'MTH')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='BI-WEEKLY', 'BI')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='WEEK', 'WK')) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, PW_AMOUNT_9089)) %>%
# mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "WK", PW_AMOUNT_9089*52,
#                                            ifelse(PW_UNIT_OF_PAY_9089 == "BI", PW_AMOUNT_9089*52/2,
#                                                   ifelse(PW_UNIT_OF_PAY_9089 == "MTH", PW_AMOUNT_9089*12,
#                                                      ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, PW_AMOUNT_9089))))) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "NULL" | is.na(PW_UNIT_OF_PAY_9089), NA, PW_AMOUNT_9089))
alldf = data %>% mutate(., CASE_STATUS = toupper(CASE_STATUS))
# Employer State
alldf = alldf %>%
mutate(., EMPLOYER_STATE = ifelse(EMPLOYER_STATE %in% state.abb, state.name[match(EMPLOYER_STATE, state.abb)], EMPLOYER_STATE)) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='BC', 'BRITISH COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DC', 'DISTRICT OF COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DISTRICT OF COLUMBIA', 'WASHINGTON')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='MP', 'NORTHERN MARIANA ISLANDS')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='GU', 'GUAM')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='PR', 'PUERTO RICO')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='VI', 'VIRGIN ISLANDS')) %>%
mutate(., EMPLOYER_STATE = toupper(EMPLOYER_STATE))
# Prevailing Wage
alldf = alldf %>%
mutate(., PW_UNIT_OF_PAY_9089 = toupper(PW_UNIT_OF_PAY_9089)) %>%
mutate(., PW_AMOUNT_9089 = as.numeric(gsub(",", "", alldf$PW_AMOUNT_9089))) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='HOUR', 'HR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='YEAR', 'YR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='MONTH', 'MTH')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='BI-WEEKLY', 'BI')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='WEEK', 'WK')) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, 'fasdfasf')) %>%
# mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "WK", PW_AMOUNT_9089*52,
#                                            ifelse(PW_UNIT_OF_PAY_9089 == "BI", PW_AMOUNT_9089*52/2,
#                                                   ifelse(PW_UNIT_OF_PAY_9089 == "MTH", PW_AMOUNT_9089*12,
#                                                      ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, PW_AMOUNT_9089))))) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "NULL" | is.na(PW_UNIT_OF_PAY_9089), NA, PW_AMOUNT_9089))
# Case Status
alldf = data %>% mutate(., CASE_STATUS = toupper(CASE_STATUS))
# Employer State
alldf = alldf %>%
mutate(., EMPLOYER_STATE = ifelse(EMPLOYER_STATE %in% state.abb, state.name[match(EMPLOYER_STATE, state.abb)], EMPLOYER_STATE)) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='BC', 'BRITISH COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DC', 'DISTRICT OF COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DISTRICT OF COLUMBIA', 'WASHINGTON')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='MP', 'NORTHERN MARIANA ISLANDS')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='GU', 'GUAM')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='PR', 'PUERTO RICO')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='VI', 'VIRGIN ISLANDS')) %>%
mutate(., EMPLOYER_STATE = toupper(EMPLOYER_STATE))
# Prevailing Wage
alldf = alldf %>%
mutate(., PW_UNIT_OF_PAY_9089 = toupper(PW_UNIT_OF_PAY_9089)) %>%
mutate(., PW_AMOUNT_9089 = as.numeric(gsub(",", "", alldf$PW_AMOUNT_9089))) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='HOUR', 'HR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='YEAR', 'YR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='MONTH', 'MTH')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='BI-WEEKLY', 'BI')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='WEEK', 'WK')) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, 'fasdfasf')) %>%
# Case Status
alldf = data %>% mutate(., CASE_STATUS = toupper(CASE_STATUS))
# Employer State
alldf = alldf %>%
mutate(., EMPLOYER_STATE = ifelse(EMPLOYER_STATE %in% state.abb, state.name[match(EMPLOYER_STATE, state.abb)], EMPLOYER_STATE)) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='BC', 'BRITISH COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DC', 'DISTRICT OF COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DISTRICT OF COLUMBIA', 'WASHINGTON')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='MP', 'NORTHERN MARIANA ISLANDS')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='GU', 'GUAM')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='PR', 'PUERTO RICO')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='VI', 'VIRGIN ISLANDS')) %>%
mutate(., EMPLOYER_STATE = toupper(EMPLOYER_STATE))
# Prevailing Wage
alldf = alldf %>%
mutate(., PW_UNIT_OF_PAY_9089 = toupper(PW_UNIT_OF_PAY_9089)) %>%
mutate(., PW_AMOUNT_9089 = as.numeric(gsub(",", "", alldf$PW_AMOUNT_9089))) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='HOUR', 'HR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='YEAR', 'YR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='MONTH', 'MTH')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='BI-WEEKLY', 'BI')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='WEEK', 'WK')) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, 'fasdfasf'))
# Case Status
alldf = data %>% mutate(., CASE_STATUS = toupper(CASE_STATUS))
# Employer State
alldf = alldf %>%
mutate(., EMPLOYER_STATE = ifelse(EMPLOYER_STATE %in% state.abb, state.name[match(EMPLOYER_STATE, state.abb)], EMPLOYER_STATE)) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='BC', 'BRITISH COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DC', 'DISTRICT OF COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DISTRICT OF COLUMBIA', 'WASHINGTON')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='MP', 'NORTHERN MARIANA ISLANDS')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='GU', 'GUAM')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='PR', 'PUERTO RICO')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='VI', 'VIRGIN ISLANDS')) %>%
mutate(., EMPLOYER_STATE = toupper(EMPLOYER_STATE))
# Prevailing Wage
alldf = alldf %>%
mutate(., PW_UNIT_OF_PAY_9089 = toupper(PW_UNIT_OF_PAY_9089)) %>%
mutate(., PW_AMOUNT_9089 = as.numeric(gsub(",", "", alldf$PW_AMOUNT_9089))) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='HOUR', 'HR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='YEAR', 'YR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='MONTH', 'MTH')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='BI-WEEKLY', 'BI')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='WEEK', 'WK')) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "WK", PW_AMOUNT_9089*52,
ifelse(PW_UNIT_OF_PAY_9089 == "BI", PW_AMOUNT_9089*52/2,
ifelse(PW_UNIT_OF_PAY_9089 == "MTH", PW_AMOUNT_9089*12,
ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, PW_AMOUNT_9089)))))
alldf = data %>% mutate(., CASE_STATUS = toupper(CASE_STATUS))
# Employer State
alldf = alldf %>%
mutate(., EMPLOYER_STATE = ifelse(EMPLOYER_STATE %in% state.abb, state.name[match(EMPLOYER_STATE, state.abb)], EMPLOYER_STATE)) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='BC', 'BRITISH COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DC', 'DISTRICT OF COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DISTRICT OF COLUMBIA', 'WASHINGTON')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='MP', 'NORTHERN MARIANA ISLANDS')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='GU', 'GUAM')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='PR', 'PUERTO RICO')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='VI', 'VIRGIN ISLANDS')) %>%
mutate(., EMPLOYER_STATE = toupper(EMPLOYER_STATE))
# Prevailing Wage
alldf = alldf %>%
mutate(., PW_UNIT_OF_PAY_9089 = toupper(PW_UNIT_OF_PAY_9089)) %>%
mutate(., PW_AMOUNT_9089 = as.numeric(gsub(",", "", alldf$PW_AMOUNT_9089))) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='HOUR', 'HR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='YEAR', 'YR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='MONTH', 'MTH')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='BI-WEEKLY', 'BI')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='WEEK', 'WK')) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "WK", PW_AMOUNT_9089*52,
ifelse(PW_UNIT_OF_PAY_9089 == "BI", PW_AMOUNT_9089*52/2,
ifelse(PW_UNIT_OF_PAY_9089 == "MTH", PW_AMOUNT_9089*12,
ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, PW_AMOUNT_9089))))) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "NULL" | is.na(PW_UNIT_OF_PAY_9089), NA, PW_AMOUNT))
min(alldf$PW_AMOUNT, na.rm=T)
max(alldf$PW_AMOUNT, na.rm=T)
alldf %>% filter(., PW_AMOUNT == 10.44)
trial = alldf %>% filter(., PW_AMOUNT == 10.44)
View(trial)
sum(alldf$PW_AMOUNT<10000)
alldf$PW_AMOUNT<10000
sum(alldf$PW_AMOUNT<10000,na.rm=T)
sum(alldf$PW_AMOUNT>1000000,na.rm=T)
sum(alldf$PW_AMOUNT>10000000,na.rm=T)
sum(alldf$PW_AMOUNT<1000,na.rm=T)
sum(alldf$PW_AMOUNT<100,na.rm=T)
max(alldf$PW_AMOUNT, na.rm=T)
trial = alldf %>% filter(., PW_AMOUNT == 515577920)
top_n(alldf$PW_AMOUNT, 20, na.rm=T)
top_n(na.omit(alldf$PW_AMOUNT), 20)
tail(sort(alldf$PW_AMOUNT),20)
trial = alldf %>% filter(., PW_AMOUNT == 259064832)
sum(alldf$PW_AMOUNT>10000000,na.rm=T)
sum(alldf$PW_AMOUNT>1000000,na.rm=T)
sum(alldf$PW_AMOUNT>100000,na.rm=T)
sum(alldf$PW_AMOUNT>200000,na.rm=T)
sum(alldf$PW_AMOUNT>300000,na.rm=T)
sum(alldf$PW_AMOUNT>400000,na.rm=T)
sum(alldf$PW_AMOUNT>500000,na.rm=T)
quantile(alldf$PW_AMOUNT, 0.95)
quantile(alldf$PW_AMOUNT, 0.95, na.rm = T)
quantile(alldf$PW_AMOUNT, 0.05, na.rm = T)
quantile(alldf$PW_AMOUNT, 0.98, na.rm = T)
quantile(alldf$PW_AMOUNT, 0.99, na.rm = T)
quantile(alldf$PW_AMOUNT, 0.01, na.rm = T)
quantile(alldf$PW_AMOUNT, 0.995, na.rm = T)
quantile(alldf$PW_AMOUNT, 0.005, na.rm = T)
trial = alldf %>% filter(., PW_AMOUNT == 198855.3)
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
quantile(alldf$PW_AMOUNT, 0.003, na.rm = T)
quantile(alldf$PW_AMOUNT, 0.004, na.rm = T)
quantile(alldf$PW_AMOUNT, 0.003, na.rm = T)
quantile(alldf$PW_AMOUNT, 0.097, na.rm = T)
quantile(alldf$PW_AMOUNT, 0.997, na.rm = T)
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
View(alldf)
distinct(alldf,CASE_STATUS)
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp()
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp()
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
alldf_bywage = alldf %>%
drop_na(., PW_AMOUNT) %>%
filter(., PW_AMOUNT >= 15000) %>%
filter(., PW_AMOUNT <= 200000) %>%
mutate(., AorR = ifelse(CASE_STATUS == "CERTIFIED" | CASE_STATUS == "CERTIFIED-EXPIRED", "CERTIFIED", CASE_STATUS))
View(alldf_bywage)
alldf_bywage = alldf %>%
drop_na(., PW_AMOUNT) %>%
filter(., PW_AMOUNT >= 15000) %>%
filter(., PW_AMOUNT <= 200000) %>%
mutate(., AorR = ifelse(CASE_STATUS == "CERTIFIED" | CASE_STATUS == "CERTIFIED-EXPIRED", "CERTIFIED", CASE_STATUS))
#
# alldf_bywage_A = alldf_bywage %>% filter(., AorR == "CERTIFIED") %>% group_by(., YEAR) %>% summarise(., A_Ave = mean(PW_AMOUNT), A_med = median(PW_AMOUNT))
# alldf_bywage_R = alldf_bywage %>% filter(., AorR == "DENIED") %>% group_by(., YEAR) %>% summarise(., R_Ave = mean(PW_AMOUNT), R_med = median(PW_AMOUNT))
# alldf_bywage_AR = inner_join(alldf_bywage_A, alldf_bywage_R, by = YEAR)
alldf_bywage_AR = alldf_bywage %>% filter(., AorR == "CERTIFIED" |  AorR == "DENIED")
alldf_bywage_AR %>%
ggplot(., aes(x = YEAR, y = PW_AMOUNT)) +
geom_point(aes(color = AorR))
alldf_bywage_AR %>%
ggplot(., aes(x = YEAR, y = PW_AMOUNT))
alldf_bywage_AR %>%
ggplot(., aes(x = YEAR, y = PW_AMOUNT))
alldf_bywage_AR %>%
ggplot(., aes(x = YEAR, y = PW_AMOUNT)) + geom_point()
alldf_bywage_AR %>%
ggplot(., aes(x = YEAR, y = PW_AMOUNT)) + geom_boxplot(aes(color = AorR))
alldf_bywage_AR %>%
ggplot(., aes(x = YEAR, y = PW_AMOUNT)) + geom_boxplot()
alldf_bywage_AR %>%
ggplot(., aes(x = YEAR, y = PW_AMOUNT)) + geom_boxplot()
View(alldf_bywage_AR)
alldf_bywage_AR %>%
ggplot(., aes(x = YEAR, y = PW_AMOUNT, color=YEAR)) + geom_boxplot()
alldf_bywage_AR %>%
ggplot(., aes(x = YEAR, y = PW_AMOUNT, color=YEAR, group = 1)) + geom_boxplot()
alldf_bywage_AR %>%
ggplot(., aes(x = factor(YEAR), y = PW_AMOUNT)) + geom_boxplot()
output$bywage_graph = reactive({
alldf_bywage_AR %>%
ggplot(., aes(x = factor(YEAR), y = PW_AMOUNT)) + geom_boxplot(aes(color = AorR))
alldf_bywage_AR %>%
ggplot(., aes(x = factor(YEAR), y = PW_AMOUNT)) + geom_boxplot(aes(color = AorR))
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp()
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
alldf_bywage_AR %>%
ggplot(., aes(x = factor(YEAR), y = PW_AMOUNT)) + geom_boxplot(aes(fill = AorR)) +
scale_y_continuous(breaks=seq(0,200000,20000)) +
ggtitle('Boxplot for Prevailing Wage Amount from 2008-2019') +
xlab('Year') +
ylab('Prevailing Wage (Yearly Salary)') +
labs(fill="Case Status") +
theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank(), panel.background = element_blank(), axis.line = element_line(colour = "black"),
axis.text.x = element_text(size=14),
axis.text.y = element_text(size=14),
plot.title = element_text(size=18, face="bold"),
axis.title.x = element_text(size=15),
axis.title.y = element_text(size=15))
countries = distinct(alldf,COUNTRY_OF_CITIZENSHIP)
View(countries)
write.csv(countries,"./countries", row.names = FALSE)
write.csv(countries,"D:/Cheng/Documents/NYCDSA/Project_1_Shiny/countries.csv", row.names = FALSE)
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
alldf %>% filter(., COUNTRY_OF_CITIZENSHIP == 'Democratic Republic of the Congo')
rc = alldf %>% filter(., COUNTRY_OF_CITIZENSHIP == 'Democratic Republic of the Congo')
View(rc)
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
alldf %>% group_by(., COUNTRY_OF_CITIZENSHIP) %>% summarise(., Applications = n()) %>% arrange(., desc(Applications))
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
distinct(alldf %>%
group_by(., COUNTRY_OF_CITIZENSHIP) %>%
drop_na(., COUNTRY_OF_CITIZENSHIP) %>%
filter(., COUNTRY_OF_CITIZENSHIP != 'NULL'), COUNTRY_OF_CITIZENSHIP)
countries2 = distinct(alldf %>%
group_by(., COUNTRY_OF_CITIZENSHIP) %>%
drop_na(., COUNTRY_OF_CITIZENSHIP) %>%
filter(., COUNTRY_OF_CITIZENSHIP != 'NULL'), COUNTRY_OF_CITIZENSHIP)
c(distinct(alldf %>%
group_by(., COUNTRY_OF_CITIZENSHIP) %>%
drop_na(., COUNTRY_OF_CITIZENSHIP) %>%
filter(., COUNTRY_OF_CITIZENSHIP != 'NULL'), COUNTRY_OF_CITIZENSHIP))
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
alldf_bycountry2 = alldf %>%
filter(., COUNTRY_OF_CITIZENSHIP == "CHINA") %>%
group_by(., YEAR)
alldf_bycountry_all2 = alldf_bycountry2() %>%
summarise(., Applications = n())
alldf_bycountry_certified2 = alldf_bycountry2() %>%
filter(., CASE_STATUS == 'CERTIFIED' | CASE_STATUS == 'CERTIFIED-EXPIRED') %>%
summarise(., Certified = n())
alldf_bycountry_withdrawn2 = alldf_bycountry2() %>%
filter(., CASE_STATUS == 'WITHDRAWN') %>%
summarise(., Withdrawn = n())
alldf_bycountry_rate2 = left_join(alldf_bycountry_all2, alldf_bycountry_certified2, by = 'YEAR') %>%
left_join(., alldf_bycountry_withdrawn, by ="YEAR") %>%
mutate(., Certified = replace_na(Certified, 0)) %>%
mutate(., Withdrawn = replace_na(Withdrawn, 0)) %>%
mutate(., Amount = Applications - Withdrawn) %>%
mutate(., Rate = Certified/Amount) %>%
mutate(., Rate = ifelse(is.na(Rate), 0, Rate))
})
alldf_bycountry2 = alldf %>%
filter(., COUNTRY_OF_CITIZENSHIP == "CHINA") %>%
group_by(., YEAR)
alldf_bycountry_all2 = alldf_bycountry2 %>%
summarise(., Applications = n())
alldf_bycountry_certified2 = alldf_bycountry2 %>%
filter(., CASE_STATUS == 'CERTIFIED' | CASE_STATUS == 'CERTIFIED-EXPIRED') %>%
summarise(., Certified = n())
alldf_bycountry_withdrawn2 = alldf_bycountry2 %>%
filter(., CASE_STATUS == 'WITHDRAWN') %>%
summarise(., Withdrawn = n())
alldf_bycountry_rate2 = left_join(alldf_bycountry_all2, alldf_bycountry_certified2, by = 'YEAR') %>%
left_join(., alldf_bycountry_withdrawn, by ="YEAR") %>%
mutate(., Certified = replace_na(Certified, 0)) %>%
mutate(., Withdrawn = replace_na(Withdrawn, 0)) %>%
mutate(., Amount = Applications - Withdrawn) %>%
mutate(., Rate = Certified/Amount) %>%
mutate(., Rate = ifelse(is.na(Rate), 0, Rate))
alldf_bycountry2 = alldf %>%
filter(., COUNTRY_OF_CITIZENSHIP == "CHINA") %>%
group_by(., YEAR)
alldf_bycountry_all2 = alldf_bycountry2 %>%
summarise(., Applications = n())
alldf_bycountry_certified2 = alldf_bycountry2 %>%
filter(., CASE_STATUS == 'CERTIFIED' | CASE_STATUS == 'CERTIFIED-EXPIRED') %>%
summarise(., Certified = n())
alldf_bycountry_withdrawn2 = alldf_bycountry2 %>%
filter(., CASE_STATUS == 'WITHDRAWN') %>%
summarise(., Withdrawn = n())
alldf_bycountry_rate2 = left_join(alldf_bycountry_all2, alldf_bycountry_certified2, by = 'YEAR') %>%
left_join(., alldf_bycountry_withdrawn2, by ="YEAR") %>%
mutate(., Certified = replace_na(Certified, 0)) %>%
mutate(., Withdrawn = replace_na(Withdrawn, 0)) %>%
mutate(., Amount = Applications - Withdrawn) %>%
mutate(., Rate = Certified/Amount) %>%
mutate(., Rate = ifelse(is.na(Rate), 0, Rate))
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
shiny::runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
runApp()
runApp('D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM')
permdata = read.csv(file = './alldf.csv')
setwd("D:/Cheng/Documents/NYCDSA/Project_1_Shiny/PERM")
permdata = read.csv(file = './alldf.csv')
library(rsconnect)
deploy()
library(rsconnect)
deploy()
deployapp()
deployApp()
shiny::runApp()
library(stringi)
library(tidyverse)
permdata = read.csv(file = './alldf.csv')
# permdata = stri_trans_general(permdata, "latin-ascii")
# Case Status
alldf = permdata %>% mutate(., CASE_STATUS = toupper(CASE_STATUS))
# Country of Citizenship
alldf = alldf %>%
mutate(., COUNTRY_OF_CITIZENSHIP = replace(COUNTRY_OF_CITIZENSHIP, COUNTRY_OF_CITIZENSHIP=='DEMOCRATIC REPUBLIC OF CONGO', 'CD')) %>%
mutate(., COUNTRY_OF_CITIZENSHIP = replace(COUNTRY_OF_CITIZENSHIP, COUNTRY_OF_CITIZENSHIP=='REPUBLIC OF CONGO', 'CG')) %>%
mutate(., COUNTRY_OF_CITIZENSHIP = replace(COUNTRY_OF_CITIZENSHIP, COUNTRY_OF_CITIZENSHIP=="COTE d'IVOIRE", 'IVORY COAST')) %>%
mutate(., COUNTRY_OF_CITIZENSHIP = replace(COUNTRY_OF_CITIZENSHIP, COUNTRY_OF_CITIZENSHIP=='SOUTH SUDAN', 'SS')) %>%
mutate(., COUNTRY_OF_CITIZENSHIP = replace(COUNTRY_OF_CITIZENSHIP, COUNTRY_OF_CITIZENSHIP=='BURMA (MYANMAR)', 'MYANMAR'))
# Employer State
alldf = alldf %>%
mutate(., EMPLOYER_STATE = ifelse(EMPLOYER_STATE %in% state.abb, state.name[match(EMPLOYER_STATE, state.abb)], EMPLOYER_STATE)) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='BC', 'BRITISH COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DC', 'DISTRICT OF COLUMBIA')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='DISTRICT OF COLUMBIA', 'WASHINGTON')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='MP', 'NORTHERN MARIANA ISLANDS')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='GU', 'GUAM')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='PR', 'PUERTO RICO')) %>%
mutate(., EMPLOYER_STATE = replace(EMPLOYER_STATE, EMPLOYER_STATE=='VI', 'VIRGIN ISLANDS')) %>%
mutate(., EMPLOYER_STATE = toupper(EMPLOYER_STATE))
# Prevailing Wage
alldf = alldf %>%
mutate(., PW_UNIT_OF_PAY_9089 = toupper(PW_UNIT_OF_PAY_9089)) %>%
mutate(., PW_AMOUNT_9089 = as.numeric(gsub(",", "", alldf$PW_AMOUNT_9089))) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='HOUR', 'HR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='YEAR', 'YR')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='MONTH', 'MTH')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='BI-WEEKLY', 'BI')) %>%
mutate(., PW_UNIT_OF_PAY_9089 = replace(PW_UNIT_OF_PAY_9089, PW_UNIT_OF_PAY_9089=='WEEK', 'WK')) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "WK", PW_AMOUNT_9089*52,
ifelse(PW_UNIT_OF_PAY_9089 == "BI", PW_AMOUNT_9089*52/2,
ifelse(PW_UNIT_OF_PAY_9089 == "MTH", PW_AMOUNT_9089*12,
ifelse(PW_UNIT_OF_PAY_9089 == "HR", PW_AMOUNT_9089*40*52, PW_AMOUNT_9089))))) %>%
mutate(., PW_AMOUNT = ifelse(PW_UNIT_OF_PAY_9089 == "NULL" | is.na(PW_UNIT_OF_PAY_9089), NA, PW_AMOUNT))
# Job Title
alldf = alldf %>%
mutate(., PW_JOB_TITLE = toupper(PW_JOB_TITLE)) %>%
mutate(., PW_SOC_CODE = ifelse(nchar(PW_SOC_CODE) == 10, substr(PW_SOC_CODE, 1, 7), PW_SOC_CODE))
example = alldf %>%
filter(., COUNTRY_OF_CITIZENSHIP == 2008) %>%
group_by(., YEAR)
View(example)
example = alldf %>%
filter(., COUNTRY_OF_CITIZENSHIP == "INDIA") %>%
group_by(., YEAR)
View(example)
